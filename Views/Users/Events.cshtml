@{
	ViewData["Title"] = "User Events";
	var usersTitle = $"{Model.FirstName} {Model.LastName}'s Cruddy Events";
	var uId = Model.Id;
	var apiBase = Model.ApiBase;
}

<div id="main" class="wrapper style1">
	<div id="notification" class="notification"></div>
	<div class="container">
		<header class="major">
			<h2>@usersTitle</h2>
			<p>Create, Read, Update, and Delete Events (CRUD)</p>
		</header>
		<div class="row gtr-150">
			<div class="col-4 col-12-medium">
				<!-- Sidebar -->
				<section id="sidebar">
					<section>
						<h3> User Event's Table</h3>
						<p>
							This is mostly the same technology and pattern as the User's table. I did stray a bit from jQuery and used some standard ES13 event handlers and the fetch API for some AJAX. I guess jQuery has reached its final days. In another decade, it will probably be as dead as Adobe Flash...
						</p>
						<p>
							All of the events here are filtered by the parent user. You can only create, read, edit and delete events for that user. 
						</p>
					</section>
				</section>
			</div>
			<div class="col-8 col-12-medium imp-medium">
				<!-- Content -->
				<section id="content">
					<div id="dataTableWrapper" class="row">
						<p class="dt-container"><span id="createBtn" class="button fit small">Create New Event</span></p>
						<table id="dataTable" class="dt-container">
							<thead>
								<tr>
									<th></th>
									<th>ID</th>
									<th>Title</th>
									<th>Location</th>
									<th>Start</th>
									<th>Duration</th>
									<th>Actions</th>
								</tr>
							</thead>
							<tbody></tbody>
						</table>
						<p style="width: 25%"><span id="backBtn" class="button fit small">Back</span></p>
					</div>
					<form method="post" id="dataForm" action="">
						<div id="dataFormWrapper" class="row gtr-uniform gtr-50" style="display:none;">
							<div class="col-12">
								<h4 id="formHeader" class="inline">Create a new event.</h4>
								<span id="labelsToggle" class="label-toggle small">Show Labels</span>
							</div>
							<div class="col-12">
								<label for="userInput" class="hide">*User</label>
								<input list="usersList" name="userInput" id="userInput" type="text" placeholder="*User" disabled/>
								<datalist id="usersList"></datalist>
							</div>
							<div class="col-12">
								<label for="title" class="hide">*Title (max: 40)</label>
								<input type="text" name="title" id="title" placeholder="*Title" maxlength="40" />
							</div>
							<div class="col-12">
								<label for="location" class="hide">Location (max: 40)</label>
								<input type="text" name="location" id="location" placeholder="Location" maxlength="40" />
							</div>
							<div class="col-6 col-12-xsmall">
								<label for="start">*Event Start Date & Time</label>
								<input type="datetime-local" name="start" id="start" />
							</div>
							<div class="col-6 col-12-xsmall">
								<label for="start">*Event Duration (Minutes)</label>
								<input type="number" id="duration" name="duration" min="10" max="100" step="10" />
							</div>

							<div class="col-12">
								<ul class="actions">
									<li><input id="submitBtn" type="submit" value="Submit"/></li>
									<li><span id="resetBtn" class="button fit">Reset</span></li>
									<li><span id="cancelBtn" class="button fit">Cancel</span></li>
								</ul>
							</div>
							<input type="hidden" name="userId" id="userId" value="0" />
							<input type="hidden" name="id" id="eventId" value="0" />
						</div>
					</form>
					<hr />
					<section id="continue">
						<h3>Development Information</h3>
						<div>
							<p class="console-notes">In the accordion tabs below, you can easily scan the core code used to generate this page. The code viewer uses AJAX to pull the code directly from the GitHub repository. You can use the toolbar to tab between files, copy the code to the clipboard, or jump directly to the code in the repository. The viewer itself is draggable to allow for more convenient viewing in limited space. The final tab uses SignalR to push all of the logging information from the server and API directly to the browser's console in real time.</p>
						</div>
						<div id="accordion" class="ui-accordion ui-widget ui-helper-reset">
							<h6>Client-Side Code</h6>
							<div class="code-div">
								<div id="ctabs" class="code-tabs ui-tabs ui-corner-all ui-widget ui-widget-content">
									<ul>
										<li><a href="#ctabs-1">cshtml</a></li>
										<li><a href="#ctabs-2">jquery</a></li>
										<li><a href="#ctabs-3">variables</a></li>
										<li><a href="#ctabs-4">functions</a></li>
										<li class="tab-menu">
											<a id="ctabs-repo" class="ui-button ui-corner-all ui-widget ui-button-icon-only" title="Repository">
												<span class="ui-button-icon ui-icon ui-icon-document"></span>
												<span class="ui-button-icon-space"> </span>
												Repository
											</a>
										</li>
										<li class="tab-menu">
											<a id="ctabs-copy" class="ui-button ui-corner-all ui-widget ui-button-icon-only" title="Copy">
												<span class="ui-button-icon ui-icon ui-icon-copy"></span>
												<span class="ui-button-icon-space"> </span>
												Copy
											</a>
										</li>
									</ul>
									<div class="scroll-div">
										<div id="ctabs-1">
											<pre class="code-block lang-cshtml" data-repo="LandedMVC" data-src="Views/Users/Events.cshtml">Loading...</pre>
										</div>
										<div id="ctabs-2">
											<pre class="code-block lang-js" data-repo="LandedMVC" data-src="wwwroot/js/views/users/events.js">Loading...</pre>
										</div>
										<div id="ctabs-3">
											<pre class="code-block lang-js" data-repo="LandedMVC" data-src="wwwroot/js/views/users/vars/events.js">Loading...</pre>
										</div>
										<div id="ctabs-4">
											<pre class="code-block lang-js" data-repo="LandedMVC" data-src="wwwroot/js/views/users/functions/events.js">Loading...</pre>
										</div>
									</div>
								</div>
							</div>
							<h6>Server-Side Code</h6>
							<div class="code-div">
								<div id="stabs" class="code-tabs ui-tabs ui-corner-all ui-widget ui-widget-content">
									<ul>
										<li><a href="#stabs-1">model</a></li>
										<li><a href="#stabs-2">controller</a></li>
										<li><a href="#stabs-3">dto</a></li>
										<li><a href="#stabs-4">api service</a></li>
										<li class="tab-menu">
											<a id="stabs-repo" class="ui-button ui-corner-all ui-widget ui-button-icon-only" title="Repository">
												<span class="ui-button-icon ui-icon ui-icon-document"></span>
												<span class="ui-button-icon-space"> </span>
												Repository
											</a>
										</li>
										<li class="tab-menu">
											<a id="stabs-copy" class="ui-button ui-corner-all ui-widget ui-button-icon-only" title="Copy">
												<span class="ui-button-icon ui-icon ui-icon-copy"></span>
												<span class="ui-button-icon-space"> </span>
												Copy
											</a>
										</li>
									</ul>
									<div class="scroll-div">
										<div id="stabs-1">
											<pre class="code-block lang-cs" data-repo="LandedMVC" data-src="Models/EventModel.cs">Loading...</pre>
										</div>
										<div id="stabs-2">
											<pre class="code-block lang-cs" data-repo="LandedMVC" data-src="Controllers/UsersController.cs">Loading...</pre>
										</div>
										<div id="stabs-3">
											<pre class="code-block lang-cs" data-repo="LandedMVC" data-src="Dtos/UserEventDto.cs">Loading...</pre>
										</div>
										<div id="stabs-4">
											<pre class="code-block lang-cs" data-repo="LandedMVC" data-src="Services/ApiService.cs">Loading...</pre>
										</div>
									</div>
								</div>
							</div>
							<h6>API Code</h6>
							<div class="code-div">
								<div id="atabs" class="code-tabs ui-tabs ui-corner-all ui-widget ui-widget-content">
									<ul>
										<li><a href="#atabs-1">dto</a></li>
										<li><a href="#atabs-2">controller</a></li>
										<li><a href="#atabs-3">service</a></li>
										<li class="tab-menu">
											<a id="atabs-repo" class="ui-button ui-corner-all ui-widget ui-button-icon-only" title="Repository">
												<span class="ui-button-icon ui-icon ui-icon-document"></span>
												<span class="ui-button-icon-space"> </span>
												Repository
											</a>
										</li>
										<li class="tab-menu">
											<a id="atabs-copy" class="ui-button ui-corner-all ui-widget ui-button-icon-only" title="Copy">
												<span class="ui-button-icon ui-icon ui-icon-copy"></span>
												<span class="ui-button-icon-space"> </span>
												Copy
											</a>
										</li>
									</ul>
									<div class="scroll-div">
										<div id="atabs-1">
											<pre class="code-block lang-cs" data-repo="DotNetCoreTestApi" data-src="TestApi/Dtos/CreateEventDto.cs">Loading...</pre>
										</div>
										<div id="atabs-2">
											<pre class="code-block lang-cs" data-repo="DotNetCoreTestApi" data-src="TestApi/Controllers/UserEventsController.cs">Loading...</pre>
										</div>
										<div id="atabs-3">
											<pre class="code-block lang-cs" data-repo="DotNetCoreTestApi" data-src="TestApi/Services/EventService.cs">Loading...</pre>
										</div>
									</div>
								</div>
							</div>
							<h6>Integrated Console</h6>
							<div class="code-div">
								<div class="console-div">
									<div id="console" class="console-view"></div>
								</div>
							</div>
						</div>
					</section>
				</section>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		var uId = @(uId);
		var api_base = '@(apiBase)';
	</script>
	@{
		await Html.RenderPartialAsync("_DataTablesUIPartial");
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
		await Html.RenderPartialAsync("_EventListenersPartial");
		await Html.RenderPartialAsync("_IntegratedConsolePartail");
	}
	<script src="~/js/views/users/vars/events.js"></script>
	<script src="~/js/views/users/events.js"></script>
	<script src="~/js/views/users/functions/events.js"></script>
}
